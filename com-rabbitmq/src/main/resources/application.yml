server:
  port: 8090
spring:
  datasource:
    type: com.alibaba.druid.pool.DruidDataSource
    druid:
      driver-class-name: com.mysql.jdbc.Driver
      url: jdbc:mysql://localhost:3306/lock?allowMultiQueries=true&useUnicode=true&characterEncoding=UTF-8&useSSL=false
      username: root
      password: root
      initial-size: 10
      max-active: 100
      min-idle: 10
      max-wait: 60000
      pool-prepared-statements: true
      max-pool-prepared-statement-per-connection-size: 20
      time-between-eviction-runs-millis: 60000
      min-evictable-idle-time-millis: 300000
      #validation-query: SELECT 1 FROM DUAL
      test-while-idle: true
      test-on-borrow: false
      test-on-return: false
      stat-view-servlet:
        enabled: true
        url-pattern: /druid/*
        #login-username: admin
        #login-password: admin
      filter:
        stat:
          log-slow-sql: true
          slow-sql-millis: 1000
          merge-sql: false
        wall:
          config:
            multi-statement-allow: true
  ###添加rabbitmq配置
  rabbitmq:
    virtual-host: /
    host: 127.0.0.1
    port: 5672
    username: guest
    password: guest
    queue:
      name: test.queue
      fanout-name1: test.queue.fanout1
      fanout-name2: test.queuq.fanout2
    template:
      exchange: test.exchange
      routing-key: test.key
component:
  fanoutExchange: test.exchange.fanout
  directExchange: test.exchange.direct
  topicExchange:  test.exchange.topic
  autoExchange:   test.exchange.auto
  queue:
    direct:
      name1:  test.queue.direct1
      name2:  test.queue.direct2
    topic:
      name1:  test.queue.topic1
      name2:  test.queue.topic2
    auto:
      autoQueue:  test.queue.auto
  routing-key:
    direct:
      keyOne: test.queue.direct1.key
      keyTwo: test.queue.direct2.key
    topic:
      keyOne: test.queue.topic.routing.*.key
      keyTwo: test.queue.topic.routing.#.key
    auto:
      routingKey: test.queue.direct.auto

